@import "tailwindcss";

/* ------------------ Viewport-wide Waves: drop-in ------------------ */
/* Use a wrapper <div class="waves"> around your wave layers */
.waves {
  position: fixed;     /* full page; change to absolute inside a section if needed */
  inset: 0;
  width: 100svw;
  height: 100%;
  pointer-events: none;
  overflow: hidden;
  z-index: 0;
}

/* Add this class to each wave layer (in addition to your color/height classes) */
.wave-layer {
  position: absolute;
  /* left: 50%; */
  transform: translateX(-1%);
  width: 100%;         /* wider than viewport so scaleX never clips */
  min-width: 100svw;
  transform-origin: center;
}

/* If you previously had max-width constraints from parents */
.waves, .wave-layer { max-width: none !important; }

/* ------------------ Animations (from your file) ------------------ */
@keyframes wave {
  0%, 100% { transform: translateY(0) scaleX(1.2); }
  50%      { transform: translateY(-20px) scaleX(1.3); }
}

@keyframes float {
  0%, 100% { transform: translateY(0) scaleX(1.02); }
  50%      { transform: translateY(-15px) scaleX(1.05); }
}

@keyframes pulse {
  0%, 100% { opacity: 0.3; transform: scale(1) scaleX(1.02); }
  50%      { opacity: 0.7; transform: scale(1.05) scaleX(1.1); }
}

@keyframes slow-shift {
  0%   { transform: translateX(-5svw) scaleX(1.05); }
  100% { transform: translateX( 5svw) scaleX(1.1); }
}

@keyframes slow-shift-reverse {
  0%   { transform: translateX( 5svw) scaleX(1.05); }
  100% { transform: translateX(-5svw) scaleX(1.1); }
}

@keyframes ripple {
  0%   { transform: scale(0); opacity: 0.7; }
  100% { transform: scale(4); opacity: 0; }
}

@keyframes water-ripple {
  0%   { width: 0; height: 0; opacity: 1; left: 0; right: 0; }
  100% { width: 600%; height: 600%; opacity: 0; left: 0; right: 0; }
}

/* Water ripple effect */
.water-ripple { position: relative; width: 100%; height: 100%; }
.water-ripple::before,
.water-ripple::after {
  content: "";
  position: absolute;
  top: 50%; left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  animation: water-ripple 4s infinite ease-out;
  opacity: 0;
}
.water-ripple::before {
  width: 100%; height: 100%;
  border: 2px solid rgba(255, 255, 255, 0.5);
  animation-delay: 0s;
}
.water-ripple::after {
  width: 100%; height: 100%;
  border: 2px solid rgba(255, 255, 255, 0.5);
  animation-delay: 1s;
}
.delay-300::before { animation-delay: 0.3s; }
.delay-300::after  { animation-delay: 1.3s; }
.delay-700::before { animation-delay: 0.7s; }
.delay-700::after  { animation-delay: 1.7s; }

/* Motion utility classes */
.animate-wave-slow   { animation: wave 20s ease-in-out infinite; }
.animate-wave-medium { animation: wave 15s ease-in-out infinite; }
.animate-wave-fast   { animation: wave 10s ease-in-out infinite; }
.animate-float-slow   { animation: float 6s ease-in-out infinite; }
.animate-float-medium { animation: float 5s ease-in-out infinite; }
.animate-float-slower { animation: float 8s ease-in-out infinite; }
.animate-pulse-slow    { animation: pulse 6s infinite; }
.animate-pulse-slower  { animation: pulse 8s infinite; }
.animate-pulse-slowest { animation: pulse 10s infinite; }
.animate-slow-shift         { animation: slow-shift 15s ease-in-out infinite alternate; }
.animate-slow-shift-reverse { animation: slow-shift-reverse 12s ease-in-out infinite alternate; }
.animate-ripple-effect { animation: ripple 1.8s ease-out forwards; }
.animation-delay-700  { animation-delay: 0.7s; }
.animation-delay-1500 { animation-delay: 1.5s; }

/* Star/twinkle animations */
@keyframes star-fall {
  0%   { transform: translateY(-100vh) translateX(0) rotate(0deg); opacity: 0; }
  10%  { opacity: 1; }
  90%  { opacity: 0.8; }
  100% { transform: translateY(100vh) translateX(100%) rotate(360deg); opacity: 0; }
}
@keyframes star-fall-reverse {
  0%   { transform: translateY(-100vh) translateX(0) rotate(0deg); opacity: 0; }
  10%  { opacity: 1; }
  90%  { opacity: 0.8; }
  100% { transform: translateY(100vh) translateX(-100%) rotate(-360deg); opacity: 0; }
}
@keyframes star-fall-long {
  0%   { transform: translateY(-150vh) translateX(0) rotate(0deg); opacity: 0; }
  15%  { opacity: 1; }
  85%  { opacity: 0.6; }
  100% { transform: translateY(150vh) translateX(200%) rotate(540deg); opacity: 0; }
}
@keyframes star-fall-fast {
  0%   { transform: translateY(-80vh) translateX(0) rotate(0deg); opacity: 0; }
  5%   { opacity: 1; }
  95%  { opacity: 0.9; }
  100% { transform: translateY(80vh) translateX(50px) rotate(180deg); opacity: 0; }
}
@keyframes twinkle {
  0%, 100% { opacity: 0.3; transform: scale(1); }
  50%      { opacity: 1;   transform: scale(1.2); }
}
.animate-star-fall         { animation: star-fall 8s linear infinite; }
.animate-star-fall-reverse { animation: star-fall-reverse 10s linear infinite; }
.animate-star-fall-long    { animation: star-fall-long 15s linear infinite; }
.animate-star-fall-fast    { animation: star-fall-fast 5s linear infinite; }
.animate-twinkle           { animation: twinkle 3s ease-in-out infinite; }

/* ------------------ Theme & base ------------------ */
:root {
  --background: #ffffff;
  --foreground: #171717;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root { --background: #0a0a0a; --foreground: #ededed; }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* Full-width container helper */
.full-width-container {
  width: 100vw;
  max-width: 100vw;
  margin-left: calc(50% - 50vw);
  margin-right: calc(50% - 50vw);
  overflow-x: hidden;
  position: relative;
}
